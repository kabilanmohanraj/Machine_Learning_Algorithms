# -*- coding: utf-8 -*-
"""ILP_Data_Set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wydtH-dkJFoh5TzJB1FBoBj1kiD6vzCK
"""

import pandas as pd

liver_data = pd.read_csv('DataSets/indian_liver_patient_dataset.csv')
liver_data.head()

feature_data = liver_data.drop('class', axis=1)
feature_data.head()

temp_encoded = pd.get_dummies(feature_data['gender'])
feature_data['Female'] = temp_encoded['Female']
feature_data['Male'] = temp_encoded['Male']
feature_data = feature_data.drop('gender', axis=1)

feature_data.head()

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()

for column in list(feature_data.columns)[:-2]:
    scaler.fit(feature_data[[column]])
    feature_data[column] = scaler.transform(feature_data[[column]])
feature_data['class'] = liver_data['class']
feature_data.head()

from sklearn.model_selection import train_test_split

liver_train, liver_test = train_test_split(feature_data, test_size=0.20, random_state=42)

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import KFold

k_fold = KFold(n_splits=5, shuffle=False, random_state=42)
features = list(feature_data.columns.drop('class'))
target = ['class']
X = liver_train[features]
y = liver_train[target]

features

import numpy as np

temp = []
for i, (train, val) in enumerate(k_fold.split(X,y)):
    model = KNeighborsClassifier(3)
    model.fit(X.iloc[train], y.iloc[train])
    y_pred = model.score(X.iloc[val], y.iloc[val])
    temp.append(y_pred)
    print(y_pred, end='\n')
print("", end='\n')
print('Mean validation score: ',np.mean(temp))

